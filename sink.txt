
> sink(sinkFile, type = 'message')

> message('Run :', Sys.Date())
Run :2021-09-12

> system(
+ 	'"C:/Program Files/Git/bin/bash.exe" -c  "tail -n 50 -f "D:/OneDrive/__Projects/econforecasting/sink.txt""',
+ 	intern = F, wait = F,
+ 	 .... [TRUNCATED] 
[1] 0

> # Convert to R -> Run
> runRes = lapply(list('m1-pull-data.rmd', 'm2-nowcast.rmd', 'm3-qual.rmd', 'm4-csm.rmd', 'm5-sql.rmd'), function(filename) {
 .... [TRUNCATED] 


########## Started - m1-pull-data.rmd: 2021-09-12 16:17:27 ##########




processing file: D:/Onedrive/__Projects/econforecasting/m1-pull-data.rmd
  |                                                                    |                                                            |   0%  |                                                                    |.                                                           |   2%  |                                                                    |..                                                          |   4%  |                                                                    |...                                                         |   5%  |                                                                    |....                                                        |   7%  |                                                                    |.....                                                       |   9%  |                                                                    |.......                                                     |  11%  |                                                                    |........                                                    |  13%  |                                                                    |.........                                                   |  15%  |                                                                    |..........                                                  |  16%  |                                                                    |...........                                                 |  18%  |                                                                    |............                                                |  20%  |                                                                    |.............                                               |  22%  |                                                                    |..............                                              |  24%  |                                                                    |...............                                             |  25%  |                                                                    |................                                            |  27%  |                                                                    |.................                                           |  29%  |                                                                    |...................                                         |  31%  |                                                                    |....................                                        |  33%  |                                                                    |.....................                                       |  35%  |                                                                    |......................                                      |  36%  |                                                                    |.......................                                     |  38%  |                                                                    |........................                                    |  40%  |                                                                    |.........................                                   |  42%  |                                                                    |..........................                                  |  44%  |                                                                    |...........................                                 |  45%  |                                                                    |............................                                |  47%  |                                                                    |.............................                               |  49%  |                                                                    |...............................                             |  51%  |                                                                    |................................                            |  53%  |                                                                    |.................................                           |  55%  |                                                                    |..................................                          |  56%  |                                                                    |...................................                         |  58%  |                                                                    |....................................                        |  60%  |                                                                    |.....................................                       |  62%  |                                                                    |......................................                      |  64%  |                                                                    |.......................................                     |  65%  |                                                                    |........................................                    |  67%  |                                                                    |.........................................                   |  69%  |                                                                    |...........................................                 |  71%  |                                                                    |............................................                |  73%  |                                                                    |.............................................               |  75%  |                                                                    |..............................................              |  76%  |                                                                    |...............................................             |  78%  |                                                                    |................................................            |  80%  |                                                                    |.................................................           |  82%  |                                                                    |..................................................          |  84%  |                                                                    |...................................................         |  85%  |                                                                    |....................................................        |  87%  |                                                                    |.....................................................       |  89%  |                                                                    |.......................................................     |  91%  |                                                                    |........................................................    |  93%  |                                                                    |.........................................................   |  95%  |                                                                    |..........................................................  |  96%  |                                                                    |........................................................... |  98%  |                                                                    |............................................................| 100%
output file: D:/Onedrive/__Projects/econforecasting/purl.r

-- Attaching packages ----------------------------- tidyverse 1.3.1 --
v ggplot2 3.3.5     v purrr   0.3.4
v tibble  3.1.3     v forcats 0.5.1
v tidyr   1.1.3     
-- Conflicts -------------------------------- tidyverse_conflicts() --
x dplyr::filter() masks stats::filter()
x dplyr::lag()    masks stats::lag()
data.table 1.14.0 using 4 threads (see ?getDTthreads).  Latest news: r-datatable.com

Attaching package: ‘data.table’

The following object is masked from ‘package:purrr’:

    transpose

The following objects are masked from ‘package:dplyr’:

    between, first, last

Loading required package: usethis

Attaching package: ‘jsonlite’

The following object is masked from ‘package:purrr’:

    flatten


Attaching package: ‘lubridate’

The following objects are masked from ‘package:data.table’:

    hour, isoweek, mday, minute, month, quarter, second, wday,
    week, yday, year

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union


Attaching package: ‘rvest’

The following object is masked from ‘package:readr’:

    guess_encoding

i Loading econforecasting
i Updating econforecasting documentation
i Loading econforecasting
Writing NAMESPACE
Writing NAMESPACE
Getting data ... gdp
Getting data ... pce
Getting data ... pceg
Getting data ... pcegd
Getting data ... pcegdmotor
Getting data ... pcegdfurnish
Getting data ... pcegdrec
Getting data ... pcegdother
Getting data ... pcegn
Getting data ... pcegnfood
Getting data ... pcegnclothing
Getting data ... pcegngas
Getting data ... pcegnother
Getting data ... pces
Getting data ... pceshousing
Getting data ... pceshealth
Getting data ... pcestransport
Getting data ... pcesrec
Getting data ... pcesfood
Getting data ... pcesfinal
Getting data ... pcesother
Getting data ... pcesnonprofit
Getting data ... pdi
Getting data ... pdin
Getting data ... pdinstruct
Getting data ... pdinequip
Getting data ... pdinip
Getting data ... pdir
Getting data ... pceschange
Getting data ... nx
Getting data ... ex
Getting data ... exg
Getting data ... exs
Getting data ... im
Getting data ... img
Getting data ... ims
Getting data ... govt
Getting data ... govtf
Getting data ... govts
Getting data ... mpce
Getting data ... mpceg
Getting data ... mpcegd
Getting data ... mpcegn
Getting data ... mpces
Getting data ... po
Getting data ... ps
Getting data ... psr
Getting data ... hpi
Getting data ... hpi20
Getting data ... houst
Getting data ... hsold
Getting data ... hpermits
Getting data ... mnodg
Getting data ... cu
Getting data ... cons
Getting data ... vsales
Getting data ... emp
Getting data ... jolts
Getting data ... wei
Getting data ... oil
Getting data ... bankci
Request failed [429]. Retrying in 1.3 seconds...
Request failed [429]. Retrying in 3.1 seconds...
Getting data ... bankdeposits
Getting data ... bankre
Getting data ... stlfsi
Getting data ... usd
Getting data ... uemean
Getting data ... advsales
Getting data ... kclfi
Getting data ... csent
Getting data ... ipi
Getting data ... pcepi
Getting data ... delinqrer
Getting data ... delinqcc
Getting data ... delinqci
Getting data ... snyfed
Getting data ... stxfed
Getting data ... sphfed
Getting data ... cfnai
Getting data ... baa
Getting data ... lfpr
Getting data ... ffr
Getting data ... sofr
Getting data ... t10y
Getting data ... t30y
Getting data ... t05y
Getting data ... t02y
Getting data ... t01y
Getting data ... t06m
Getting data ... t03m
Getting data ... t01m
Getting data ... t20y
Getting data ... t07y
Getting data ... mort15y
Getting data ... mort30y
Getting data ... mort5y
Getting data ... cpi
Getting data ... pi
Getting data ... pid
Getting data ... ue
Getting data ... bankcredit
Getting data ... advsalesmotor
Getting data ... advsalesfurnish
Getting data ... advsaleselectronics
Getting data ... advsalesbuilding
Getting data ... advsalesfood
Getting data ... advsaleshealth
Getting data ... advsalesgas
Getting data ... advsalesclothing
Getting data ... advsaleshobby
Getting data ... advsalesmerch
Getting data ... advsalesmisc
Getting data ... advsalesnonstore
Getting data ... advsalesfoodservices
mpce
mpceg
mpcegd
mpcegn
mpces
po
ps
psr
hpi
hpi20
houst
hsold
hpermits
mnodg
cu
cons
vsales
emp
jolts
wei
oil
bankci
bankdeposits
bankre
stlfsi
usd
uemean
advsales
kclfi
csent
ipi
pcepi
snyfed
stxfed
sphfed
cfnai
baa
lfpr
ffr
sofr
t10y
t30y
t05y
t02y
t01y
t06m
t03m
t01m
t20y
t07y
mort15y
mort30y
mort5y
cpi
spy
vix
moo
metals
spdw
pi
pid
ue
bankcredit
advsalesmotor
advsalesfurnish
advsaleselectronics
advsalesbuilding
advsalesfood
advsaleshealth
advsalesgas
advsalesclothing
advsaleshobby
advsalesmerch
advsalesmisc
advsalesnonstore
advsalesfoodservices
gdp
pce
pceg
pcegd
pcegdmotor
pcegdfurnish
pcegdrec
pcegdother
pcegn
pcegnfood
pcegnclothing
pcegngas
pcegnother
pces
pceshousing
pceshealth
pcestransport
pcesrec
pcesfood
pcesfinal
pcesother
pcesnonprofit
pdi
pdin
pdinstruct
pdinequip
pdinip
pdir
pceschange
nx
ex
exg
exs
im
img
ims
govt
govtf
govts
mpce
mpceg
mpcegd
mpcegn
mpces
po
ps
psr
hpi
hpi20
houst
hsold
hpermits
mnodg
cu
cons
vsales
emp
jolts
wei
oil
bankci
bankdeposits
bankre
stlfsi
usd
uemean
advsales
kclfi
csent
ipi
pcepi
delinqrer
delinqcc
delinqci
snyfed
stxfed
sphfed
cfnai
baa
lfpr
ffr
sofr
t10y
t30y
t05y
t02y
t01y
t06m
t03m
t01m
t20y
t07y
mort15y
mort30y
mort5y
cpi
inf
spy
vix
moo
metals
spdw
tdns1
tdns2
tdns3
mort30yt30yspread
mort15yt10yspread
pi
pid
ue
bankcredit
advsalesmotor
advsalesfurnish
advsaleselectronics
advsalesbuilding
advsalesfood
advsaleshealth
advsalesgas
advsalesclothing
advsaleshobby
advsalesmerch
advsalesmisc
advsalesnonstore
advsalesfoodservices
[1mindexing[0m [34mfile3ac3b1623b7[0m [========================] [32m3.09MB/s[0m, eta: [36m 0s[0m                                                                                                         -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    2021-01-01
-/                                                                    -/                                                                    2021-04-01
-/                                                                    -/                                                                    2021-07-01
-/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    -/                                                                    trying URL 'https://www.clevelandfed.org/en/our-research/indicators-and-data/~/media/content/our%20research/indicators%20and%20data/inflation%20expectations/ie%20latest/ie%20xls.xls'
Content type 'application/vnd.ms-excel' length 396288 bytes (387 KB)
downloaded 387 KB

-/                                                                    Starting Quandl data scrape...
[1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m?[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m262.14kB[0m in [36m 0s[0m, [32m818.65kB/s[0m[1mindexed[0m [32m393.21kB[0m in [36m 0s[0m, [32m862.00kB/s[0m[1mindexed[0m [32m402.57kB[0m in [36m 0s[0m, [32m864.22kB/s[0m                                                                    [1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m?[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    [1mindexed[0m [32m0B[0m in [36m 0s[0m, [32m?[0m[1mindexed[0m [32m2.15GB[0m in [36m 0s[0m, [32m2.15GB/s[0m                                                                    Completed Quandl data scrape
Starting CME data scrape...
Completed CME data scrape...
Adding monthly interpolation ...


########## Finished - m1-pull-data.rmd: 2021-09-12 16:20:22 ##########




########## Started - m2-nowcast.rmd: 2021-09-12 16:20:22 ##########




processing file: D:/Onedrive/__Projects/econforecasting/m2-nowcast.rmd
  |                                                                    |                                                            |   0%  |                                                                    |..                                                          |   3%  |                                                                    |...                                                         |   5%  |                                                                    |.....                                                       |   8%  |                                                                    |......                                                      |  10%  |                                                                    |........                                                    |  13%  |                                                                    |.........                                                   |  15%  |                                                                    |...........                                                 |  18%  |                                                                    |............                                                |  21%  |                                                                    |..............                                              |  23%  |                                                                    |...............                                             |  26%  |                                                                    |.................                                           |  28%  |                                                                    |..................                                          |  31%  |                                                                    |....................                                        |  33%  |                                                                    |......................                                      |  36%  |                                                                    |.......................                                     |  38%  |                                                                    |.........................                                   |  41%  |                                                                    |..........................                                  |  44%  |                                                                    |............................                                |  46%  |                                                                    |.............................                               |  49%  |                                                                    |...............................                             |  51%  |                                                                    |................................                            |  54%  |                                                                    |..................................                          |  56%  |                                                                    |...................................                         |  59%  |                                                                    |.....................................                       |  62%  |                                                                    |......................................                      |  64%  |                                                                    |........................................                    |  67%  |                                                                    |..........................................                  |  69%  |                                                                    |...........................................                 |  72%  |                                                                    |.............................................               |  74%  |                                                                    |..............................................              |  77%  |                                                                    |................................................            |  79%  |                                                                    |.................................................           |  82%  |                                                                    |...................................................         |  85%  |                                                                    |....................................................        |  87%  |                                                                    |......................................................      |  90%  |                                                                    |.......................................................     |  92%  |                                                                    |.........................................................   |  95%  |                                                                    |..........................................................  |  97%  |                                                                    |............................................................| 100%
output file: D:/Onedrive/__Projects/econforecasting/purl.r

[1mindexing[0m [34mpurl.r[0m [========================================] [32m?[0m, eta: [36m 0s[0m                                                                                                         
Attaching package: ‘glue’

The following object is masked from ‘package:dplyr’:

    collapse

i Loading econforecasting
i Updating econforecasting documentation
i Loading econforecasting
Writing NAMESPACE
Writing NAMESPACE
# A tibble: 406 x 3
   term     name    value
   <chr>    <chr>   <dbl>
 1 advsales mpce    0.948
 2 csent    kclfi   0.916
 3 ue       ipi    -0.865
 4 ipi      mpce    0.850
 5 mort30y  t10y    0.826
 6 ue       bankci  0.817
 7 ue       mpce   -0.806
 8 advsales vsales  0.795
 9 ipi      bankci -0.778
10 vsales   mpce    0.775
# ... with 396 more rows
1
2
1
2
Fitting elastic net ... 1
Fitting elastic net ... 2
Note: Using an external vector in selections is ambiguous.
i Use `all_of(.varname)` instead of `.varname` to silence this message.
i See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
# A tibble: 6 x 2
  date         hpi
  <date>     <dbl>
1 2021-07-01  11.5
2 2021-08-01  11.3
3 2021-09-01  11.2
4 2021-10-01  11.1
5 2021-11-01  10.9
6 2021-12-01  10.8
# A tibble: 2 x 4
  date         pce   pdi   gdp
  <date>     <dbl> <dbl> <dbl>
1 2021-07-01  8.12 15.7   6.88
2 2021-10-01  2.30  4.15  2.27


########## Finished - m2-nowcast.rmd: 2021-09-12 16:21:15 ##########




########## Started - m3-qual.rmd: 2021-09-12 16:21:15 ##########




processing file: D:/Onedrive/__Projects/econforecasting/m3-qual.rmd
  |                                                                    |                                                            |   0%  |                                                                    |..                                                          |   3%  |                                                                    |...                                                         |   6%  |                                                                    |.....                                                       |   8%  |                                                                    |.......                                                     |  11%  |                                                                    |........                                                    |  14%  |                                                                    |..........                                                  |  17%  |                                                                    |............                                                |  19%  |                                                                    |.............                                               |  22%  |                                                                    |...............                                             |  25%  |                                                                    |.................                                           |  28%  |                                                                    |..................                                          |  31%  |                                                                    |....................                                        |  33%  |                                                                    |......................                                      |  36%  |                                                                    |.......................                                     |  39%  |                                                                    |.........................                                   |  42%  |                                                                    |...........................                                 |  44%  |                                                                    |............................                                |  47%  |                                                                    |..............................                              |  50%  |                                                                    |................................                            |  53%  |                                                                    |.................................                           |  56%  |                                                                    |...................................                         |  58%  |                                                                    |.....................................                       |  61%  |                                                                    |......................................                      |  64%  |                                                                    |........................................                    |  67%  |                                                                    |..........................................                  |  69%  |                                                                    |...........................................                 |  72%  |                                                                    |.............................................               |  75%  |                                                                    |...............................................             |  78%  |                                                                    |................................................            |  81%  |                                                                    |..................................................          |  83%  |                                                                    |....................................................        |  86%  |                                                                    |.....................................................       |  89%  |                                                                    |.......................................................     |  92%  |                                                                    |.........................................................   |  94%  |                                                                    |..........................................................  |  97%  |                                                                    |............................................................| 100%
output file: D:/Onedrive/__Projects/econforecasting/purl.r

[1mindexing[0m [34mpurl.r[0m [========================================] [32m?[0m, eta: [36m 0s[0m                                                                                                         
Attaching package: ‘cowplot’

The following object is masked from ‘package:lubridate’:

    stamp

i Loading econforecasting
i Updating econforecasting documentation
i Loading econforecasting
Writing NAMESPACE
Writing NAMESPACE
$exg

$exs

$ffr

$govt

$govts

$hpi

$img

$ims

$inf

$mort15y

$mort15yt10yspread

$mort30y

$mort30yt30yspread

$pcegdfurnish

$pcegdmotor

$pcegdother

$pcegdrec

$pcegnclothing

$pcegnfood

$pcegngas

$pcegnother

$pcesfinal

$pcesfood

$pceshealth

$pceshousing

$pcesnonprofit

$pcesother

$pcesrec

$pcestransport

$pdinequip

$pdinip

$pdinstruct

$pdir

$pid

$sofr

$spy

$t01m

$t01y

$t02y

$t03m

$t05y

$t06m

$t07y

$t10y

$t20y

$t30y

$tdns1

$tdns2

$tdns3

$ue



########## Finished - m3-qual.rmd: 2021-09-12 16:22:33 ##########




########## Started - m4-csm.rmd: 2021-09-12 16:22:33 ##########




processing file: D:/Onedrive/__Projects/econforecasting/m4-csm.rmd
  |                                                                    |                                                            |   0%  |                                                                    |..                                                          |   3%  |                                                                    |...                                                         |   6%  |                                                                    |.....                                                       |   9%  |                                                                    |.......                                                     |  11%  |                                                                    |.........                                                   |  14%  |                                                                    |..........                                                  |  17%  |                                                                    |............                                                |  20%  |                                                                    |..............                                              |  23%  |                                                                    |...............                                             |  26%  |                                                                    |.................                                           |  29%  |                                                                    |...................                                         |  31%  |                                                                    |.....................                                       |  34%  |                                                                    |......................                                      |  37%  |                                                                    |........................                                    |  40%  |                                                                    |..........................                                  |  43%  |                                                                    |...........................                                 |  46%  |                                                                    |.............................                               |  49%  |                                                                    |...............................                             |  51%  |                                                                    |.................................                           |  54%  |                                                                    |..................................                          |  57%  |                                                                    |....................................                        |  60%  |                                                                    |......................................                      |  63%  |                                                                    |.......................................                     |  66%  |                                                                    |.........................................                   |  69%  |                                                                    |...........................................                 |  71%  |                                                                    |.............................................               |  74%  |                                                                    |..............................................              |  77%  |                                                                    |................................................            |  80%  |                                                                    |..................................................          |  83%  |                                                                    |...................................................         |  86%  |                                                                    |.....................................................       |  89%  |                                                                    |.......................................................     |  91%  |                                                                    |.........................................................   |  94%  |                                                                    |..........................................................  |  97%  |                                                                    |............................................................| 100%
output file: D:/Onedrive/__Projects/econforecasting/purl.r

[1mindexing[0m [34mpurl.r[0m [========================================] [32m?[0m, eta: [36m 0s[0m                                                                                                         Loading required package: ggpp

Attaching package: ‘ggpp’

The following object is masked from ‘package:ggplot2’:

    annotate

i Loading econforecasting
i Updating econforecasting documentation
i Loading econforecasting
Writing NAMESPACE
Writing NAMESPACE
Identity equations checked OK
pcegdmotor = constant + wma4.pid + ma2.ue + lma2.pcegdmotor + oil
pcegdfurnish = constant + wma4.pid + ma2.ue + lma2.pcegdfurnish
pcegdrec = constant + wma4.pid + ma2.ue + lma2.pcegdrec
pcegdother = constant + wma4.pid + ma2.ue + lma2.pcegdother
pcegnfood = constant + wma4.pid + ma2.ue + lma2.pcegnfood
pcegnclothing = constant + wma4.pid + ma2.ue + lma2.pcegnclothing
pcegngas = constant + wma4.pid + ma2.ue + lma2.pcegngas
pcegnother = constant + wma4.pid + ma2.ue + lma2.pcegnother
pceshousing = constant + wma4.pid + ma2.ue + lma2.pceshousing
pceshealth = constant + wma4.pid + ma2.ue + lma2.pceshealth
pcestransport = constant + wma4.pid + ma2.ue + lma2.pcestransport
pcesrec = constant + wma4.pid + ma2.ue + lma2.pcesrec
pcesfood = constant + wma4.pid + ma2.ue + lma2.pcesfood
pcesfinal = constant + wma4.pid + ma2.ue + lma2.pcesfinal
pcesother = constant + wma4.pid + ma2.ue + lma2.pcesother
pcesnonprofit = constant + wma4.pid + ma2.ue + lma2.pcesnonprofit
pdi = constant + pdin + pdir
pdinstruct = constant + wma2.pce + ue + spy + lma2.pdinstruct + wma2.t10y
pdinequip = constant + wma2.pce + ue + spy + lma2.pdinequip + wma2.t10y
pdinip = constant + wma2.pce + ue + spy + lma2.pdinip + wma2.t10y
pdir = constant + wma2.pce + ue + spy + lma2.pdir + wma2.mort30y + wma2.hpi
exg = constant + lma2.pdin + lma2.exg
exs = constant + lma2.pdin + lma2.exs
img = constant + lma2.pdin + lma2.img
ims = constant + lma2.pdin + lma2.ims
govtf = constant + govtf.l1 + lma2.gdp
govts = constant + govts.l1 + lma2.gdp
hpi20 = constant + hpi + lma2.hpi20 + inf
houst = constant + hpi + lma2.ue + mort30y + lma2.hsold
hsold = constant + hpi + lma2.ue + mort30y + lma2.houst
hpermits = constant + hpi + lma2.ue + mort30y + lma2.hpermits
vsales = constant + lma2.vsales + wma2.pce + oil
advsalesmotor = constant + lma2.advsalesmotor + pce + pce.l1
advsalesfurnish = constant + lma2.advsalesfurnish + pce + pce.l1
advsaleselectronics = constant + lma2.advsaleselectronics + pce + pce.l1
advsalesbuilding = constant + lma2.advsalesbuilding + pce + pce.l1
advsalesfood = constant + lma2.advsalesfood + pce + pce.l1
advsaleshealth = constant + lma2.advsaleshealth + pce + pce.l1
advsalesgas = constant + lma2.advsalesgas + pce + pce.l1
advsalesclothing = constant + lma2.advsalesclothing + pce + pce.l1
advsaleshobby = constant + lma2.advsaleshobby + pce + pce.l1
advsalesmerch = constant + lma2.advsalesmerch + pce + pce.l1
advsalesmisc = constant + lma2.advsalesmisc + pce + pce.l1
advsalesnonstore = constant + lma2.advsalesnonstore + pce + pce.l1
advsalesfoodservices = constant + lma2.advsalesfoodservices + pce + pce.l1
advsales = constant + lma2.advsales + pce + pce.l1
emp = constant + ue + gdp
jolts = constant + ue + gdp
oil = constant + lma2.oil + spy + hpi
delinqrer = constant + ma2.ue + ma2.pid + lma2.delinqrer
delinqcc = constant + ma2.ue + ma2.pid + lma2.delinqcc
delinqci = constant + ma2.ue + ma2.pid + lma2.delinqci
bankci = constant + ma2.ue + ma2.pid + lma2.bankci
bankdeposits = constant + ma2.ue + ma2.pid + lma2.bankdeposits
bankre = constant + ma2.ue + ma2.pid + lma2.bankre
mort5y = constant + mort30y
vix = constant + vix.l1 + spy + spy.l1
moo = constant + moo.l1 + spy + gdp
metals = constant + metals.l1 + spy + gdp
usd = constant + lma2.usd + wma2.gdp + hpi
Error in solve.default(aMat) : 'a' (38 x 37) must be square
In addition: Warning messages:
1: package ‘ggpmisc’ was built under R version 4.1.1 
2: package ‘ggpp’ was built under R version 4.1.1 
i Loading econforecasting
i Updating econforecasting documentation
i Loading econforecasting
Writing NAMESPACE
Writing NAMESPACE
Warning in gzfile(file, "rb") :
  cannot open compressed file 'D:/Onedrive/__Projects/econforecasting/model-outputs/[2021-09-14] m3.rds', probable reason 'No such file or directory'
Error in gzfile(file, "rb") : cannot open the connection
i Loading econforecasting
i Updating econforecasting documentation
i Loading econforecasting
Writing NAMESPACE
Writing NAMESPACE
Warning in gzfile(file, "rb") :
  cannot open compressed file 'D:/Onedrive/__Projects/econforecasting/model-outputs/[2021-09-14] m3.rds', probable reason 'No such file or directory'
Error in gzfile(file, "rb") : cannot open the connection
Warning in gzfile(file, "rb") :
  cannot open compressed file 'D:/Onedrive/__Projects/econforecasting/model-outputs/[2021-09-14] m3.rds', probable reason 'No such file or directory'
Error in gzfile(file, "rb") : cannot open the connection
i Loading econforecasting
i Updating econforecasting documentation
i Loading econforecasting
Writing NAMESPACE
Writing NAMESPACE
Identity equations checked OK
pcegdmotor = constant + wma4.pid + ma2.ue + lma2.pcegdmotor + oil
pcegdfurnish = constant + wma4.pid + ma2.ue + lma2.pcegdfurnish
pcegdrec = constant + wma4.pid + ma2.ue + lma2.pcegdrec
pcegdother = constant + wma4.pid + ma2.ue + lma2.pcegdother
pcegnfood = constant + wma4.pid + ma2.ue + lma2.pcegnfood
pcegnclothing = constant + wma4.pid + ma2.ue + lma2.pcegnclothing
pcegngas = constant + wma4.pid + ma2.ue + lma2.pcegngas
pcegnother = constant + wma4.pid + ma2.ue + lma2.pcegnother
pceshousing = constant + wma4.pid + ma2.ue + lma2.pceshousing
pceshealth = constant + wma4.pid + ma2.ue + lma2.pceshealth
pcestransport = constant + wma4.pid + ma2.ue + lma2.pcestransport
pcesrec = constant + wma4.pid + ma2.ue + lma2.pcesrec
pcesfood = constant + wma4.pid + ma2.ue + lma2.pcesfood
pcesfinal = constant + wma4.pid + ma2.ue + lma2.pcesfinal
pcesother = constant + wma4.pid + ma2.ue + lma2.pcesother
pcesnonprofit = constant + wma4.pid + ma2.ue + lma2.pcesnonprofit
pdi = constant + pdin + pdir
pdinstruct = constant + wma2.pce + ue + spy + lma2.pdinstruct + wma2.t10y
pdinequip = constant + wma2.pce + ue + spy + lma2.pdinequip + wma2.t10y
pdinip = constant + wma2.pce + ue + spy + lma2.pdinip + wma2.t10y
pdir = constant + wma2.pce + ue + spy + lma2.pdir + wma2.mort30y + wma2.hpi
exg = constant + lma2.pdin + lma2.exg
exs = constant + lma2.pdin + lma2.exs
img = constant + lma2.pdin + lma2.img
ims = constant + lma2.pdin + lma2.ims
govtf = constant + govtf.l1 + lma2.gdp
govts = constant + govts.l1 + lma2.gdp
hpi20 = constant + hpi + lma2.hpi20 + inf
houst = constant + hpi + lma2.ue + mort30y + lma2.hsold
hsold = constant + hpi + lma2.ue + mort30y + lma2.houst
hpermits = constant + hpi + lma2.ue + mort30y + lma2.hpermits
vsales = constant + lma2.vsales + wma2.pce + oil
advsalesmotor = constant + lma2.advsalesmotor + pce + pce.l1
advsalesfurnish = constant + lma2.advsalesfurnish + pce + pce.l1
advsaleselectronics = constant + lma2.advsaleselectronics + pce + pce.l1
advsalesbuilding = constant + lma2.advsalesbuilding + pce + pce.l1
advsalesfood = constant + lma2.advsalesfood + pce + pce.l1
advsaleshealth = constant + lma2.advsaleshealth + pce + pce.l1
advsalesgas = constant + lma2.advsalesgas + pce + pce.l1
advsalesclothing = constant + lma2.advsalesclothing + pce + pce.l1
advsaleshobby = constant + lma2.advsaleshobby + pce + pce.l1
advsalesmerch = constant + lma2.advsalesmerch + pce + pce.l1
advsalesmisc = constant + lma2.advsalesmisc + pce + pce.l1
advsalesnonstore = constant + lma2.advsalesnonstore + pce + pce.l1
advsalesfoodservices = constant + lma2.advsalesfoodservices + pce + pce.l1
advsales = constant + lma2.advsales + pce + pce.l1
emp = constant + ue + gdp
jolts = constant + ue + gdp
oil = constant + lma2.oil + spy + hpi
delinqrer = constant + ma2.ue + ma2.pid + lma2.delinqrer
delinqcc = constant + ma2.ue + ma2.pid + lma2.delinqcc
delinqci = constant + ma2.ue + ma2.pid + lma2.delinqci
bankci = constant + ma2.ue + ma2.pid + lma2.bankci
bankdeposits = constant + ma2.ue + ma2.pid + lma2.bankdeposits
bankre = constant + ma2.ue + ma2.pid + lma2.bankre
mort5y = constant + mort30y
vix = constant + vix.l1 + spy + spy.l1
moo = constant + moo.l1 + spy + gdp
metals = constant + metals.l1 + spy + gdp
usd = constant + lma2.usd + wma2.gdp + hpi
Error in names(lines) <- format(c("", row_idx), align = "right") : 
  'names' attribute [117] must be the same length as the vector [0]
NULL
Error: unexpected end of input

Error: unexpected ',' in "        'delinqrer = constant + ma2.ue + ma2.pid + lma2.delinqrer',"
pcegdmotor = constant + wma4.pid + ma2.ue + lma2.pcegdmotor + oil
pcegdfurnish = constant + wma4.pid + ma2.ue + lma2.pcegdfurnish
pcegdrec = constant + wma4.pid + ma2.ue + lma2.pcegdrec
pcegdother = constant + wma4.pid + ma2.ue + lma2.pcegdother
pcegnfood = constant + wma4.pid + ma2.ue + lma2.pcegnfood
pcegnclothing = constant + wma4.pid + ma2.ue + lma2.pcegnclothing
pcegngas = constant + wma4.pid + ma2.ue + lma2.pcegngas
pcegnother = constant + wma4.pid + ma2.ue + lma2.pcegnother
pceshousing = constant + wma4.pid + ma2.ue + lma2.pceshousing
pceshealth = constant + wma4.pid + ma2.ue + lma2.pceshealth
pcestransport = constant + wma4.pid + ma2.ue + lma2.pcestransport
pcesrec = constant + wma4.pid + ma2.ue + lma2.pcesrec
pcesfood = constant + wma4.pid + ma2.ue + lma2.pcesfood
pcesfinal = constant + wma4.pid + ma2.ue + lma2.pcesfinal
pcesother = constant + wma4.pid + ma2.ue + lma2.pcesother
pcesnonprofit = constant + wma4.pid + ma2.ue + lma2.pcesnonprofit
pdi = constant + pdin + pdir
pdinstruct = constant + wma2.pce + ue + spy + lma2.pdinstruct + wma2.t10y
pdinequip = constant + wma2.pce + ue + spy + lma2.pdinequip + wma2.t10y
pdinip = constant + wma2.pce + ue + spy + lma2.pdinip + wma2.t10y
pdir = constant + wma2.pce + ue + spy + lma2.pdir + wma2.mort30y + wma2.hpi
exg = constant + lma2.pdin + lma2.exg
exs = constant + lma2.pdin + lma2.exs
img = constant + lma2.pdin + lma2.img
ims = constant + lma2.pdin + lma2.ims
govtf = constant + govtf.l1 + lma2.gdp
govts = constant + govts.l1 + lma2.gdp
hpi20 = constant + hpi + lma2.hpi20 + inf
houst = constant + hpi + lma2.ue + mort30y + lma2.hsold
hsold = constant + hpi + lma2.ue + mort30y + lma2.houst
hpermits = constant + hpi + lma2.ue + mort30y + lma2.hpermits
vsales = constant + lma2.vsales + wma2.pce + oil
advsalesmotor = constant + lma2.advsalesmotor + pce + pce.l1
advsalesfurnish = constant + lma2.advsalesfurnish + pce + pce.l1
advsaleselectronics = constant + lma2.advsaleselectronics + pce + pce.l1
advsalesbuilding = constant + lma2.advsalesbuilding + pce + pce.l1
advsalesfood = constant + lma2.advsalesfood + pce + pce.l1
advsaleshealth = constant + lma2.advsaleshealth + pce + pce.l1
advsalesgas = constant + lma2.advsalesgas + pce + pce.l1
advsalesclothing = constant + lma2.advsalesclothing + pce + pce.l1
advsaleshobby = constant + lma2.advsaleshobby + pce + pce.l1
advsalesmerch = constant + lma2.advsalesmerch + pce + pce.l1
advsalesmisc = constant + lma2.advsalesmisc + pce + pce.l1
advsalesnonstore = constant + lma2.advsalesnonstore + pce + pce.l1
advsalesfoodservices = constant + lma2.advsalesfoodservices + pce + pce.l1
advsales = constant + lma2.advsales + pce + pce.l1
emp = constant + ue + gdp
jolts = constant + ue + gdp
oil = constant + lma2.oil + spy + hpi
delinqrer = constant + ma2.ue + ma2.pid + lma2.delinqrer
delinqcc = constant + ma2.ue + ma2.pid + lma2.delinqcc
delinqci = constant + ma2.ue + ma2.pid + lma2.delinqci
bankci = constant + ma2.ue + ma2.pid + lma2.bankci
bankdeposits = constant + ma2.ue + ma2.pid + lma2.bankdeposits
bankre = constant + ma2.ue + ma2.pid + lma2.bankre
mort5y = constant + mort30y
vix = constant + vix.l1 + spy + spy.l1
moo = constant + moo.l1 + spy + gdp
metals = constant + metals.l1 + spy + gdp
usd = constant + lma2.usd + wma2.gdp + hpi
$pcegdmotor
$pcegdmotor$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
       constant         wma4.pid           ma2.ue  lma2.pcegdmotor  
       0.009962         0.806591         0.063311        -0.021084  
            oil  
       0.124151  


$pcegdmotor$fittedPlot

$pcegdmotor$gofCoefStats
# A tibble: 5 x 5
  term            estimate std.error statistic  p.value
  <chr>              <dbl>     <dbl>     <dbl>    <dbl>
1 constant         0.00996   0.00632    1.58   0.123   
2 wma4.pid         0.807     0.464      1.74   0.0902  
3 ma2.ue           0.0633    0.0524     1.21   0.234   
4 lma2.pcegdmotor -0.0211    0.259     -0.0815 0.935   
5 oil              0.124     0.0303     4.10   0.000218

$pcegdmotor$gofStats
# A tibble: 1 x 6
  varname       r2 adjr2   aic   bic        p
  <chr>      <dbl> <dbl> <dbl> <dbl>    <dbl>
1 pcegdmotor 0.435 0.359 -163. -153. 0.000540

$pcegdmotor$coefRes
# A tibble: 1 x 11
  pcegdmotor constant    pid pid.l1 pid.l2  pid.l3      ue   ue.l1
       <dbl>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>
1          1 -0.00996 -0.387 -0.194 -0.129 -0.0968 -0.0317 -0.0317
# ... with 3 more variables: pcegdmotor.l1 <dbl>,
#   pcegdmotor.l2 <dbl>, oil <dbl>

$pcegdmotor$varname
[1] "pcegdmotor"


$pcegdfurnish
$pcegdfurnish$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
         constant           wma4.pid             ma2.ue  
          0.01373            0.39521            0.02539  
lma2.pcegdfurnish  
          0.10416  


$pcegdfurnish$fittedPlot

$pcegdfurnish$gofCoefStats
# A tibble: 4 x 5
  term              estimate std.error statistic p.value
  <chr>                <dbl>     <dbl>     <dbl>   <dbl>
1 constant            0.0137   0.00715     1.92   0.0625
2 wma4.pid            0.395    0.373       1.06   0.296 
3 ma2.ue              0.0254   0.0400      0.634  0.530 
4 lma2.pcegdfurnish   0.104    0.371       0.280  0.781 

$pcegdfurnish$gofStats
# A tibble: 1 x 6
  varname         r2 adjr2   aic   bic        p
  <chr>        <dbl> <dbl> <dbl> <dbl>    <dbl>
1 pcegdfurnish 0.380 0.315 -182. -173. 0.000929

$pcegdfurnish$coefRes
# A tibble: 1 x 10
  pcegdfurnish constant    pid  pid.l1  pid.l2  pid.l3      ue   ue.l1
         <dbl>    <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>
1            1  -0.0137 -0.190 -0.0949 -0.0632 -0.0474 -0.0127 -0.0127
# ... with 2 more variables: pcegdfurnish.l1 <dbl>,
#   pcegdfurnish.l2 <dbl>

$pcegdfurnish$varname
[1] "pcegdfurnish"


$pcegdrec
$pcegdrec$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
     constant       wma4.pid         ma2.ue  lma2.pcegdrec  
      0.01146        0.51582        0.08948        0.47618  


$pcegdrec$fittedPlot

$pcegdrec$gofCoefStats
# A tibble: 4 x 5
  term          estimate std.error statistic   p.value
  <chr>            <dbl>     <dbl>     <dbl>     <dbl>
1 constant        0.0115   0.00477      2.40 0.0212   
2 wma4.pid        0.516    0.192        2.69 0.0107   
3 ma2.ue          0.0895   0.0179       5.01 0.0000129
4 lma2.pcegdrec   0.476    0.160        2.98 0.00499  

$pcegdrec$gofStats
# A tibble: 1 x 6
  varname     r2 adjr2   aic   bic        p
  <chr>    <dbl> <dbl> <dbl> <dbl>    <dbl>
1 pcegdrec 0.837 0.820 -233. -225. 1.86e-14

$pcegdrec$coefRes
# A tibble: 1 x 10
  pcegdrec constant    pid pid.l1  pid.l2  pid.l3      ue   ue.l1
     <dbl>    <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>
1        1  -0.0115 -0.248 -0.124 -0.0825 -0.0619 -0.0447 -0.0447
# ... with 2 more variables: pcegdrec.l1 <dbl>, pcegdrec.l2 <dbl>

$pcegdrec$varname
[1] "pcegdrec"


$pcegdother
$pcegdother$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
       constant         wma4.pid           ma2.ue  lma2.pcegdother  
        0.02481          0.01845         -0.19899         -0.80849  


$pcegdother$fittedPlot

$pcegdother$gofCoefStats
# A tibble: 4 x 5
  term            estimate std.error statistic p.value
  <chr>              <dbl>     <dbl>     <dbl>   <dbl>
1 constant          0.0248    0.0119    2.09    0.0431
2 wma4.pid          0.0184    1.15      0.0161  0.987 
3 ma2.ue           -0.199     0.127    -1.57    0.124 
4 lma2.pcegdother  -0.808     0.434    -1.86    0.0703

$pcegdother$gofStats
# A tibble: 1 x 6
  varname       r2 adjr2   aic   bic      p
  <chr>      <dbl> <dbl> <dbl> <dbl>  <dbl>
1 pcegdother 0.193 0.108 -106. -97.2 0.0793

$pcegdother$coefRes
# A tibble: 1 x 10
  pcegdother constant      pid   pid.l1   pid.l2   pid.l3     ue
       <dbl>    <dbl>    <dbl>    <dbl>    <dbl>    <dbl>  <dbl>
1          1  -0.0248 -0.00885 -0.00443 -0.00295 -0.00221 0.0995
# ... with 3 more variables: ue.l1 <dbl>, pcegdother.l1 <dbl>,
#   pcegdother.l2 <dbl>

$pcegdother$varname
[1] "pcegdother"


$pcegnfood
$pcegnfood$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
      constant        wma4.pid          ma2.ue  lma2.pcegnfood  
       0.00472         0.23001        -0.01782         0.01050  


$pcegnfood$fittedPlot

$pcegnfood$gofCoefStats
# A tibble: 4 x 5
  term           estimate std.error statistic p.value
  <chr>             <dbl>     <dbl>     <dbl>   <dbl>
1 constant        0.00472   0.00405    1.17     0.251
2 wma4.pid        0.230     0.181      1.27     0.211
3 ma2.ue         -0.0178    0.0256    -0.696    0.491
4 lma2.pcegnfood  0.0105    0.464      0.0226   0.982

$pcegnfood$gofStats
# A tibble: 1 x 6
  varname      r2 adjr2   aic   bic      p
  <chr>     <dbl> <dbl> <dbl> <dbl>  <dbl>
1 pcegnfood 0.253 0.174 -240. -231. 0.0229

$pcegnfood$coefRes
# A tibble: 1 x 10
  pcegnfood constant    pid  pid.l1  pid.l2  pid.l3      ue   ue.l1
      <dbl>    <dbl>  <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>
1         1 -0.00472 -0.110 -0.0552 -0.0368 -0.0276 0.00891 0.00891
# ... with 2 more variables: pcegnfood.l1 <dbl>, pcegnfood.l2 <dbl>

$pcegnfood$varname
[1] "pcegnfood"


$pcegnclothing
$pcegnclothing$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
          constant            wma4.pid              ma2.ue  
           0.01546            -0.32105            -0.12167  
lma2.pcegnclothing  
          -0.72949  


$pcegnclothing$fittedPlot

$pcegnclothing$gofCoefStats
# A tibble: 4 x 5
  term               estimate std.error statistic p.value
  <chr>                 <dbl>     <dbl>     <dbl>   <dbl>
1 constant             0.0155    0.0102     1.51    0.139
2 wma4.pid            -0.321     0.979     -0.328   0.745
3 ma2.ue              -0.122     0.120     -1.02    0.316
4 lma2.pcegnclothing  -0.729     0.470     -1.55    0.129

$pcegnclothing$gofStats
# A tibble: 1 x 6
  varname          r2  adjr2   aic   bic     p
  <chr>         <dbl>  <dbl> <dbl> <dbl> <dbl>
1 pcegnclothing 0.153 0.0637 -120. -112. 0.167

$pcegnclothing$coefRes
# A tibble: 1 x 10
  pcegnclothing constant   pid pid.l1 pid.l2 pid.l3     ue  ue.l1
          <dbl>    <dbl> <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>
1             1  -0.0155 0.154 0.0771 0.0514 0.0385 0.0608 0.0608
# ... with 2 more variables: pcegnclothing.l1 <dbl>,
#   pcegnclothing.l2 <dbl>

$pcegnclothing$varname
[1] "pcegnclothing"


$pcegngas
$pcegngas$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
     constant       wma4.pid         ma2.ue  lma2.pcegngas  
   -0.0006463     -0.6761622     -0.1716141     -1.0420252  


$pcegngas$fittedPlot

$pcegngas$gofCoefStats
# A tibble: 4 x 5
  term           estimate std.error statistic p.value
  <chr>             <dbl>     <dbl>     <dbl>   <dbl>
1 constant      -0.000646   0.00780   -0.0829 0.934  
2 wma4.pid      -0.676      0.604     -1.12   0.270  
3 ma2.ue        -0.172      0.0694    -2.47   0.0180 
4 lma2.pcegngas -1.04       0.366     -2.85   0.00704

$pcegngas$gofStats
# A tibble: 1 x 6
  varname     r2 adjr2   aic   bic       p
  <chr>    <dbl> <dbl> <dbl> <dbl>   <dbl>
1 pcegngas 0.375 0.309 -154. -146. 0.00108

$pcegngas$coefRes
# A tibble: 1 x 10
  pcegngas constant   pid pid.l1 pid.l2 pid.l3     ue  ue.l1
     <dbl>    <dbl> <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>
1        1 0.000646 0.325  0.162  0.108 0.0811 0.0858 0.0858
# ... with 2 more variables: pcegngas.l1 <dbl>, pcegngas.l2 <dbl>

$pcegngas$varname
[1] "pcegngas"


$pcegnother
$pcegnother$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
       constant         wma4.pid           ma2.ue  lma2.pcegnother  
       0.007921        -0.193889         0.018387         0.373082  


$pcegnother$fittedPlot

$pcegnother$gofCoefStats
# A tibble: 4 x 5
  term            estimate std.error statistic p.value
  <chr>              <dbl>     <dbl>     <dbl>   <dbl>
1 constant         0.00792   0.00288      2.75 0.00909
2 wma4.pid        -0.194     0.149       -1.30 0.200  
3 ma2.ue           0.0184    0.0130       1.41 0.166  
4 lma2.pcegnother  0.373     0.283        1.32 0.196  

$pcegnother$gofStats
# A tibble: 1 x 6
  varname       r2 adjr2   aic   bic         p
  <chr>      <dbl> <dbl> <dbl> <dbl>     <dbl>
1 pcegnother 0.517 0.466 -260. -251. 0.0000107

$pcegnother$coefRes
# A tibble: 1 x 10
  pcegnother constant    pid pid.l1 pid.l2 pid.l3       ue    ue.l1
       <dbl>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>    <dbl>    <dbl>
1          1 -0.00792 0.0931 0.0465 0.0310 0.0233 -0.00919 -0.00919
# ... with 2 more variables: pcegnother.l1 <dbl>, pcegnother.l2 <dbl>

$pcegnother$varname
[1] "pcegnother"


$pceshousing
$pceshousing$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
        constant          wma4.pid            ma2.ue  
        0.002116          0.031516          0.006568  
lma2.pceshousing  
       -0.654902  


$pceshousing$fittedPlot

$pceshousing$gofCoefStats
# A tibble: 4 x 5
  term             estimate std.error statistic p.value
  <chr>               <dbl>     <dbl>     <dbl>   <dbl>
1 constant          0.00212  0.000871     2.43  0.0200 
2 wma4.pid          0.0315   0.0588       0.536 0.595  
3 ma2.ue            0.00657  0.00525      1.25  0.218  
4 lma2.pceshousing -0.655    0.222       -2.94  0.00551

$pceshousing$gofStats
# A tibble: 1 x 6
  varname        r2 adjr2   aic   bic       p
  <chr>       <dbl> <dbl> <dbl> <dbl>   <dbl>
1 pceshousing 0.301 0.228 -333. -325. 0.00743

$pceshousing$coefRes
# A tibble: 1 x 10
  pceshousing constant     pid   pid.l1   pid.l2   pid.l3       ue
        <dbl>    <dbl>   <dbl>    <dbl>    <dbl>    <dbl>    <dbl>
1           1 -0.00212 -0.0151 -0.00756 -0.00504 -0.00378 -0.00328
# ... with 3 more variables: ue.l1 <dbl>, pceshousing.l1 <dbl>,
#   pceshousing.l2 <dbl>

$pceshousing$varname
[1] "pceshousing"


$pceshealth
$pceshealth$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
       constant         wma4.pid           ma2.ue  lma2.pceshealth  
       0.006917         0.289441        -0.258300        -1.469147  


$pceshealth$fittedPlot

$pceshealth$gofCoefStats
# A tibble: 4 x 5
  term            estimate std.error statistic    p.value
  <chr>              <dbl>     <dbl>     <dbl>      <dbl>
1 constant         0.00692   0.00532     1.30  0.201     
2 wma4.pid         0.289     0.501       0.578 0.567     
3 ma2.ue          -0.258     0.0518     -4.98  0.0000140 
4 lma2.pceshealth -1.47      0.274      -5.36  0.00000432

$pceshealth$gofStats
# A tibble: 1 x 6
  varname       r2 adjr2   aic   bic           p
  <chr>      <dbl> <dbl> <dbl> <dbl>       <dbl>
1 pceshealth 0.588 0.545 -176. -168. 0.000000574

$pceshealth$coefRes
# A tibble: 1 x 10
  pceshealth constant    pid  pid.l1  pid.l2  pid.l3    ue ue.l1
       <dbl>    <dbl>  <dbl>   <dbl>   <dbl>   <dbl> <dbl> <dbl>
1          1 -0.00692 -0.139 -0.0695 -0.0463 -0.0347 0.129 0.129
# ... with 2 more variables: pceshealth.l1 <dbl>, pceshealth.l2 <dbl>

$pceshealth$varname
[1] "pceshealth"


$pcestransport
$pcestransport$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
          constant            wma4.pid              ma2.ue  
           0.01461            -2.17523            -0.32302  
lma2.pcestransport  
          -0.49761  


$pcestransport$fittedPlot

$pcestransport$gofCoefStats
# A tibble: 4 x 5
  term               estimate std.error statistic  p.value
  <chr>                 <dbl>     <dbl>     <dbl>    <dbl>
1 constant             0.0146    0.0102      1.43 0.161   
2 wma4.pid            -2.18      0.790      -2.75 0.00896 
3 ma2.ue              -0.323     0.0761     -4.24 0.000137
4 lma2.pcestransport  -0.498     0.193      -2.57 0.0141  

$pcestransport$gofStats
# A tibble: 1 x 6
  varname          r2 adjr2   aic   bic          p
  <chr>         <dbl> <dbl> <dbl> <dbl>      <dbl>
1 pcestransport 0.566 0.521 -120. -112. 0.00000151

$pcestransport$coefRes
# A tibble: 1 x 10
  pcestransport constant   pid pid.l1 pid.l2 pid.l3    ue ue.l1
          <dbl>    <dbl> <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl>
1             1  -0.0146  1.04  0.522  0.348  0.261 0.162 0.162
# ... with 2 more variables: pcestransport.l1 <dbl>,
#   pcestransport.l2 <dbl>

$pcestransport$varname
[1] "pcestransport"


$pcesrec
$pcesrec$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
    constant      wma4.pid        ma2.ue  lma2.pcesrec  
    0.001688     -1.563529     -0.483533     -0.780456  


$pcesrec$fittedPlot

$pcesrec$gofCoefStats
# A tibble: 4 x 5
  term         estimate std.error statistic  p.value
  <chr>           <dbl>     <dbl>     <dbl>    <dbl>
1 constant      0.00169    0.0150     0.112 0.911   
2 wma4.pid     -1.56       1.16      -1.35  0.185   
3 ma2.ue       -0.484      0.114     -4.25  0.000135
4 lma2.pcesrec -0.780      0.232     -3.36  0.00176 

$pcesrec$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic         p
  <chr>   <dbl> <dbl> <dbl> <dbl>     <dbl>
1 pcesrec 0.508 0.457 -91.1 -82.4 0.0000148

$pcesrec$coefRes
# A tibble: 1 x 10
  pcesrec constant   pid pid.l1 pid.l2 pid.l3    ue ue.l1 pcesrec.l1
    <dbl>    <dbl> <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl>      <dbl>
1       1 -0.00169 0.750  0.375  0.250  0.188 0.242 0.242      0.390
# ... with 1 more variable: pcesrec.l2 <dbl>

$pcesrec$varname
[1] "pcesrec"


$pcesfood
$pcesfood$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
     constant       wma4.pid         ma2.ue  lma2.pcesfood  
     0.008764      -1.004462      -0.379154      -0.967350  


$pcesfood$fittedPlot

$pcesfood$gofCoefStats
# A tibble: 4 x 5
  term          estimate std.error statistic p.value
  <chr>            <dbl>     <dbl>     <dbl>   <dbl>
1 constant       0.00876    0.0129     0.680 0.501  
2 wma4.pid      -1.00       1.05      -0.959 0.344  
3 ma2.ue        -0.379      0.111     -3.41  0.00155
4 lma2.pcesfood -0.967      0.303     -3.19  0.00284

$pcesfood$gofStats
# A tibble: 1 x 6
  varname     r2 adjr2   aic   bic        p
  <chr>    <dbl> <dbl> <dbl> <dbl>    <dbl>
1 pcesfood 0.429 0.369 -104. -95.1 0.000216

$pcesfood$coefRes
# A tibble: 1 x 10
  pcesfood constant   pid pid.l1 pid.l2 pid.l3    ue ue.l1 pcesfood.l1
     <dbl>    <dbl> <dbl>  <dbl>  <dbl>  <dbl> <dbl> <dbl>       <dbl>
1        1 -0.00876 0.482  0.241  0.161  0.121 0.190 0.190       0.484
# ... with 1 more variable: pcesfood.l2 <dbl>

$pcesfood$varname
[1] "pcesfood"


$pcesfinal
$pcesfinal$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
      constant        wma4.pid          ma2.ue  lma2.pcesfinal  
      0.001486       -0.076531       -0.003223        0.387260  


$pcesfinal$fittedPlot

$pcesfinal$gofCoefStats
# A tibble: 4 x 5
  term           estimate std.error statistic p.value
  <chr>             <dbl>     <dbl>     <dbl>   <dbl>
1 constant        0.00149   0.00149     1.00   0.323 
2 wma4.pid       -0.0765    0.112      -0.681  0.500 
3 ma2.ue         -0.00322   0.0102     -0.315  0.755 
4 lma2.pcesfinal  0.387     0.207       1.87   0.0686

$pcesfinal$gofStats
# A tibble: 1 x 6
  varname      r2  adjr2   aic   bic     p
  <chr>     <dbl>  <dbl> <dbl> <dbl> <dbl>
1 pcesfinal 0.140 0.0499 -280. -272. 0.207

$pcesfinal$coefRes
# A tibble: 1 x 10
  pcesfinal constant    pid pid.l1 pid.l2  pid.l3      ue   ue.l1
      <dbl>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>   <dbl>
1         1 -0.00149 0.0367 0.0184 0.0122 0.00918 0.00161 0.00161
# ... with 2 more variables: pcesfinal.l1 <dbl>, pcesfinal.l2 <dbl>

$pcesfinal$varname
[1] "pcesfinal"


$pcesother
$pcesother$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
      constant        wma4.pid          ma2.ue  lma2.pcesother  
      0.005637       -0.414738       -0.166788       -0.642636  


$pcesother$fittedPlot

$pcesother$gofCoefStats
# A tibble: 4 x 5
  term           estimate std.error statistic   p.value
  <chr>             <dbl>     <dbl>     <dbl>     <dbl>
1 constant        0.00564   0.00449      1.26 0.217    
2 wma4.pid       -0.415     0.358       -1.16 0.254    
3 ma2.ue         -0.167     0.0341      -4.89 0.0000185
4 lma2.pcesother -0.643     0.197       -3.25 0.00239  

$pcesother$gofStats
# A tibble: 1 x 6
  varname      r2 adjr2   aic   bic          p
  <chr>     <dbl> <dbl> <dbl> <dbl>      <dbl>
1 pcesother 0.540 0.492 -189. -180. 0.00000432

$pcesother$coefRes
# A tibble: 1 x 10
  pcesother constant   pid pid.l1 pid.l2 pid.l3     ue  ue.l1
      <dbl>    <dbl> <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>
1         1 -0.00564 0.199 0.0995 0.0664 0.0498 0.0834 0.0834
# ... with 2 more variables: pcesother.l1 <dbl>, pcesother.l2 <dbl>

$pcesother$varname
[1] "pcesother"


$pcesnonprofit
$pcesnonprofit$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
          constant            wma4.pid              ma2.ue  
           0.00925             0.16610             0.13491  
lma2.pcesnonprofit  
          -0.68182  


$pcesnonprofit$fittedPlot

$pcesnonprofit$gofCoefStats
# A tibble: 4 x 5
  term               estimate std.error statistic p.value
  <chr>                 <dbl>     <dbl>     <dbl>   <dbl>
1 constant            0.00925   0.00967     0.956  0.345 
2 wma4.pid            0.166     0.696       0.239  0.813 
3 ma2.ue              0.135     0.0907      1.49   0.145 
4 lma2.pcesnonprofit -0.682     0.349      -1.95   0.0582

$pcesnonprofit$gofStats
# A tibble: 1 x 6
  varname          r2  adjr2   aic   bic     p
  <chr>         <dbl>  <dbl> <dbl> <dbl> <dbl>
1 pcesnonprofit 0.141 0.0501 -135. -127. 0.207

$pcesnonprofit$coefRes
# A tibble: 1 x 10
  pcesnonprofit constant     pid  pid.l1  pid.l2  pid.l3      ue
          <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>
1             1 -0.00925 -0.0797 -0.0399 -0.0266 -0.0199 -0.0675
# ... with 3 more variables: ue.l1 <dbl>, pcesnonprofit.l1 <dbl>,
#   pcesnonprofit.l2 <dbl>

$pcesnonprofit$varname
[1] "pcesnonprofit"


$pdi
$pdi$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
 constant       pdin       pdir  
-0.008127   1.289083   0.347199  


$pdi$fittedPlot

$pdi$gofCoefStats
# A tibble: 3 x 5
  term     estimate std.error statistic      p.value
  <chr>       <dbl>     <dbl>     <dbl>        <dbl>
1 constant -0.00813   0.00394     -2.06 0.0456      
2 pdin      1.29      0.186        6.93 0.0000000186
3 pdir      0.347     0.109        3.19 0.00271     

$pdi$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic        p
  <chr>   <dbl> <dbl> <dbl> <dbl>    <dbl>
1 pdi     0.716 0.696 -208. -201. 1.47e-11

$pdi$coefRes
# A tibble: 1 x 4
    pdi constant  pdin   pdir
  <dbl>    <dbl> <dbl>  <dbl>
1     1  0.00813 -1.29 -0.347

$pdi$varname
[1] "pdi"


$pdinstruct
$pdinstruct$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
       constant         wma2.pce               ue              spy  
      0.0003423       -0.0930534       -0.1195865       -0.0052785  
lma2.pdinstruct        wma2.t10y  
      0.3634203       -0.0142473  


$pdinstruct$fittedPlot

$pdinstruct$gofCoefStats
# A tibble: 6 x 5
  term             estimate std.error statistic p.value
  <chr>               <dbl>     <dbl>     <dbl>   <dbl>
1 constant         0.000342   0.00856    0.0400  0.968 
2 wma2.pce        -0.0931     1.14      -0.0818  0.935 
3 ue              -0.120      0.0744    -1.61    0.116 
4 spy             -0.00528    0.141     -0.0374  0.970 
5 lma2.pdinstruct  0.363      0.174      2.09    0.0432
6 wma2.t10y       -0.0142     0.0216    -0.659   0.514 

$pdinstruct$gofStats
# A tibble: 1 x 6
  varname       r2 adjr2   aic   bic       p
  <chr>      <dbl> <dbl> <dbl> <dbl>   <dbl>
1 pdinstruct 0.371 0.269 -162. -150. 0.00616

$pdinstruct$coefRes
# A tibble: 1 x 10
  pdinstruct  constant    pce pce.l1    ue     spy pdinstruct.l1
       <dbl>     <dbl>  <dbl>  <dbl> <dbl>   <dbl>         <dbl>
1          1 -0.000342 0.0620 0.0310 0.120 0.00528        -0.182
# ... with 3 more variables: pdinstruct.l2 <dbl>, t10y <dbl>,
#   t10y.l1 <dbl>

$pdinstruct$varname
[1] "pdinstruct"


$pdinequip
$pdinequip$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
      constant        wma2.pce              ue             spy  
      0.004273        1.017124       -0.052753        0.055609  
lma2.pdinequip       wma2.t10y  
     -0.089633       -0.008688  


$pdinequip$fittedPlot

$pdinequip$gofCoefStats
# A tibble: 6 x 5
  term           estimate std.error statistic p.value
  <chr>             <dbl>     <dbl>     <dbl>   <dbl>
1 constant        0.00427   0.00519     0.823   0.416
2 wma2.pce        1.02      0.718       1.42    0.165
3 ue             -0.0528    0.0468     -1.13    0.267
4 spy             0.0556    0.0877      0.634   0.530
5 lma2.pdinequip -0.0896    0.138      -0.651   0.519
6 wma2.t10y      -0.00869   0.0135     -0.644   0.523

$pdinequip$gofStats
# A tibble: 1 x 6
  varname      r2 adjr2   aic   bic           p
  <chr>     <dbl> <dbl> <dbl> <dbl>       <dbl>
1 pdinequip 0.665 0.610 -203. -191. 0.000000156

$pdinequip$coefRes
# A tibble: 1 x 10
  pdinequip constant    pce pce.l1     ue     spy pdinequip.l1
      <dbl>    <dbl>  <dbl>  <dbl>  <dbl>   <dbl>        <dbl>
1         1 -0.00427 -0.678 -0.339 0.0528 -0.0556       0.0448
# ... with 3 more variables: pdinequip.l2 <dbl>, t10y <dbl>,
#   t10y.l1 <dbl>

$pdinequip$varname
[1] "pdinequip"


$pdinip
$pdinip$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
   constant     wma2.pce           ue          spy  lma2.pdinip  
   0.011442     0.891957     0.019099    -0.074703     0.102932  
  wma2.t10y  
   0.002392  


$pdinip$fittedPlot

$pdinip$gofCoefStats
# A tibble: 6 x 5
  term        estimate std.error statistic  p.value
  <chr>          <dbl>     <dbl>     <dbl>    <dbl>
1 constant     0.0114    0.00316     3.62  0.000884
2 wma2.pce     0.892     0.299       2.98  0.00506 
3 ue           0.0191    0.0200      0.954 0.346   
4 spy         -0.0747    0.0376     -1.99  0.0542  
5 lma2.pdinip  0.103     0.175       0.589 0.559   
6 wma2.t10y    0.00239   0.00575     0.416 0.680   

$pdinip$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic        p
  <chr>   <dbl> <dbl> <dbl> <dbl>    <dbl>
1 pdinip  0.811 0.781 -276. -264. 5.33e-12

$pdinip$coefRes
# A tibble: 1 x 10
  pdinip constant    pce pce.l1      ue    spy pdinip.l1 pdinip.l2
   <dbl>    <dbl>  <dbl>  <dbl>   <dbl>  <dbl>     <dbl>     <dbl>
1      1  -0.0114 -0.595 -0.297 -0.0191 0.0747   -0.0515   -0.0515
# ... with 2 more variables: t10y <dbl>, t10y.l1 <dbl>

$pdinip$varname
[1] "pdinip"


$pdir
$pdir$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
    constant      wma2.pce            ue           spy     lma2.pdir  
     0.01309      -2.34089      -0.25199       0.09407       0.14204  
wma2.mort30y      wma2.hpi  
    -0.04655       0.41577  


$pdir$fittedPlot

$pdir$gofCoefStats
# A tibble: 7 x 5
  term         estimate std.error statistic    p.value
  <chr>           <dbl>     <dbl>     <dbl>      <dbl>
1 constant       0.0131   0.00495     2.64  0.0121    
2 wma2.pce      -2.34     0.722      -3.24  0.00255   
3 ue            -0.252    0.0480     -5.25  0.00000698
4 spy            0.0941   0.0805      1.17  0.250     
5 lma2.pdir      0.142    0.175       0.813 0.421     
6 wma2.mort30y  -0.0465   0.0153     -3.05  0.00430   
7 wma2.hpi       0.416    0.365       1.14  0.262     

$pdir$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic            p
  <chr>   <dbl> <dbl> <dbl> <dbl>        <dbl>
1 pdir    0.732 0.679 -209. -195. 0.0000000131

$pdir$coefRes
# A tibble: 1 x 12
   pdir constant   pce pce.l1    ue     spy pdir.l1 pdir.l2 mort30y
  <dbl>    <dbl> <dbl>  <dbl> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>
1     1  -0.0131  1.56  0.780 0.252 -0.0941 -0.0710 -0.0710  0.0310
# ... with 3 more variables: mort30y.l1 <dbl>, hpi <dbl>,
#   hpi.l1 <dbl>

$pdir$varname
[1] "pdir"


$exg
$exg$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
 constant  lma2.pdin   lma2.exg  
-0.003406   1.406384  -1.207431  


$exg$fittedPlot

$exg$gofCoefStats
# A tibble: 3 x 5
  term      estimate std.error statistic p.value
  <chr>        <dbl>     <dbl>     <dbl>   <dbl>
1 constant  -0.00341    0.0102    -0.335 0.739  
2 lma2.pdin  1.41       0.834      1.69  0.0995 
3 lma2.exg  -1.21       0.438     -2.76  0.00870

$exg$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic      p
  <chr>   <dbl> <dbl> <dbl> <dbl>  <dbl>
1 exg     0.190 0.129 -135. -128. 0.0363

$exg$coefRes
# A tibble: 1 x 6
    exg constant pdin.l1 pdin.l2 exg.l1 exg.l2
  <dbl>    <dbl>   <dbl>   <dbl>  <dbl>  <dbl>
1     1  0.00341  -0.703  -0.703  0.604  0.604

$exg$varname
[1] "exg"


$exs
$exs$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
 constant  lma2.pdin   lma2.exs  
-0.006149   0.480441  -0.020277  


$exs$fittedPlot

$exs$gofCoefStats
# A tibble: 3 x 5
  term      estimate std.error statistic p.value
  <chr>        <dbl>     <dbl>     <dbl>   <dbl>
1 constant  -0.00615   0.00811   -0.758    0.453
2 lma2.pdin  0.480     0.567      0.848    0.402
3 lma2.exs  -0.0203    0.319     -0.0636   0.950

$exs$gofStats
# A tibble: 1 x 6
  varname     r2   adjr2   aic   bic     p
  <chr>    <dbl>   <dbl> <dbl> <dbl> <dbl>
1 exs     0.0453 -0.0262 -163. -156. 0.598

$exs$coefRes
# A tibble: 1 x 6
    exs constant pdin.l1 pdin.l2 exs.l1 exs.l2
  <dbl>    <dbl>   <dbl>   <dbl>  <dbl>  <dbl>
1     1  0.00615  -0.240  -0.240 0.0101 0.0101

$exs$varname
[1] "exs"


$img
$img$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
 constant  lma2.pdin   lma2.img  
 0.016332  -0.742056   0.009355  


$img$fittedPlot

$img$gofCoefStats
# A tibble: 3 x 5
  term      estimate std.error statistic p.value
  <chr>        <dbl>     <dbl>     <dbl>   <dbl>
1 constant   0.0163    0.00748    2.18    0.0349
2 lma2.pdin -0.742     0.559     -1.33    0.192 
3 lma2.img   0.00936   0.337      0.0278  0.978 

$img$gofStats
# A tibble: 1 x 6
  varname    r2  adjr2   aic   bic     p
  <chr>   <dbl>  <dbl> <dbl> <dbl> <dbl>
1 img     0.121 0.0551 -150. -143. 0.156

$img$coefRes
# A tibble: 1 x 6
    img constant pdin.l1 pdin.l2   img.l1   img.l2
  <dbl>    <dbl>   <dbl>   <dbl>    <dbl>    <dbl>
1     1  -0.0163   0.371   0.371 -0.00468 -0.00468

$img$varname
[1] "img"


$ims
$ims$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
 constant  lma2.pdin   lma2.ims  
-0.009082   0.744096  -0.293769  


$ims$fittedPlot

$ims$gofCoefStats
# A tibble: 3 x 5
  term      estimate std.error statistic p.value
  <chr>        <dbl>     <dbl>     <dbl>   <dbl>
1 constant  -0.00908    0.0126    -0.719   0.476
2 lma2.pdin  0.744      0.866      0.859   0.396
3 lma2.ims  -0.294      0.357     -0.823   0.416

$ims$gofStats
# A tibble: 1 x 6
  varname     r2   adjr2   aic   bic     p
  <chr>    <dbl>   <dbl> <dbl> <dbl> <dbl>
1 ims     0.0194 -0.0542 -127. -120. 0.852

$ims$coefRes
# A tibble: 1 x 6
    ims constant pdin.l1 pdin.l2 ims.l1 ims.l2
  <dbl>    <dbl>   <dbl>   <dbl>  <dbl>  <dbl>
1     1  0.00908  -0.372  -0.372  0.147  0.147

$ims$varname
[1] "ims"


$govtf
$govtf$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
 constant   govtf.l1   lma2.gdp  
-0.001647   0.189932   0.372304  


$govtf$fittedPlot

$govtf$gofCoefStats
# A tibble: 3 x 5
  term     estimate std.error statistic p.value
  <chr>       <dbl>     <dbl>     <dbl>   <dbl>
1 constant -0.00165   0.00217    -0.759  0.452 
2 govtf.l1  0.190     0.164       1.16   0.255 
3 lma2.gdp  0.372     0.191       1.95   0.0580

$govtf$gofStats
# A tibble: 1 x 6
  varname     r2  adjr2   aic   bic     p
  <chr>    <dbl>  <dbl> <dbl> <dbl> <dbl>
1 govtf   0.0913 0.0232 -247. -240. 0.275

$govtf$coefRes
# A tibble: 1 x 5
  govtf constant govtf.l1 gdp.l1 gdp.l2
  <dbl>    <dbl>    <dbl>  <dbl>  <dbl>
1     1  0.00165   -0.190 -0.186 -0.186

$govtf$varname
[1] "govtf"


$govts
$govts$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
  constant    govts.l1    lma2.gdp  
 0.0007921   0.4601619  -0.0613077  


$govts$fittedPlot

$govts$gofCoefStats
# A tibble: 3 x 5
  term      estimate std.error statistic p.value
  <chr>        <dbl>     <dbl>     <dbl>   <dbl>
1 constant  0.000792  0.000965     0.821 0.416  
2 govts.l1  0.460     0.145        3.18  0.00286
3 lma2.gdp -0.0613    0.0840      -0.730 0.470  

$govts$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic      p
  <chr>   <dbl> <dbl> <dbl> <dbl>  <dbl>
1 govts   0.214 0.155 -315. -308. 0.0208

$govts$coefRes
# A tibble: 1 x 5
  govts  constant govts.l1 gdp.l1 gdp.l2
  <dbl>     <dbl>    <dbl>  <dbl>  <dbl>
1     1 -0.000792   -0.460 0.0307 0.0307

$govts$varname
[1] "govts"


$hpi20
$hpi20$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
  constant         hpi  lma2.hpi20         inf  
-0.0002285   0.9984499   0.1380849  -0.0005095  


$hpi20$fittedPlot

$hpi20$gofCoefStats
# A tibble: 4 x 5
  term        estimate std.error statistic  p.value
  <chr>          <dbl>     <dbl>     <dbl>    <dbl>
1 constant   -0.000228  0.00140     -0.163 8.71e- 1
2 hpi         0.998     0.0616      16.2   2.17e-18
3 lma2.hpi20  0.138     0.0600       2.30  2.72e- 2
4 inf        -0.000510  0.000535    -0.952 3.47e- 1

$hpi20$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic        p
  <chr>   <dbl> <dbl> <dbl> <dbl>    <dbl>
1 hpi20   0.976 0.973 -346. -338. 2.80e-29

$hpi20$coefRes
# A tibble: 1 x 6
  hpi20 constant    hpi hpi20.l1 hpi20.l2      inf
  <dbl>    <dbl>  <dbl>    <dbl>    <dbl>    <dbl>
1     1 0.000228 -0.998  -0.0690  -0.0690 0.000510

$hpi20$varname
[1] "hpi20"


$houst
$houst$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
  constant         hpi     lma2.ue     mort30y  lma2.hsold  
  0.025710   -0.081673    0.260866    0.008053    0.068004  


$houst$fittedPlot

$houst$gofCoefStats
# A tibble: 5 x 5
  term       estimate std.error statistic p.value
  <chr>         <dbl>     <dbl>     <dbl>   <dbl>
1 constant    0.0257     0.0195    1.32    0.195 
2 hpi        -0.0817     1.17     -0.0699  0.945 
3 lma2.ue     0.261      0.100     2.61    0.0130
4 mort30y     0.00805    0.0556    0.145   0.886 
5 lma2.hsold  0.0680     0.285     0.239   0.813 

$houst$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic      p
  <chr>   <dbl> <dbl> <dbl> <dbl>  <dbl>
1 houst   0.217 0.114 -83.7 -73.2 0.0857

$houst$coefRes
# A tibble: 1 x 8
  houst constant    hpi  ue.l1  ue.l2  mort30y hsold.l1 hsold.l2
  <dbl>    <dbl>  <dbl>  <dbl>  <dbl>    <dbl>    <dbl>    <dbl>
1     1  -0.0257 0.0817 -0.130 -0.130 -0.00805  -0.0340  -0.0340

$houst$varname
[1] "houst"


$hsold
$hsold$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
  constant         hpi     lma2.ue     mort30y  lma2.houst  
   0.03735    -1.40037     0.26926    -0.09505     0.08969  


$hsold$fittedPlot

$hsold$gofCoefStats
# A tibble: 5 x 5
  term       estimate std.error statistic p.value
  <chr>         <dbl>     <dbl>     <dbl>   <dbl>
1 constant     0.0374    0.0166     2.26   0.0299
2 hpi         -1.40      0.984     -1.42   0.163 
3 lma2.ue      0.269     0.111      2.44   0.0197
4 mort30y     -0.0950    0.0481    -1.98   0.0553
5 lma2.houst   0.0897    0.284      0.316  0.754 

$hsold$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic       p
  <chr>   <dbl> <dbl> <dbl> <dbl>   <dbl>
1 hsold   0.386 0.305 -97.8 -87.2 0.00177

$hsold$coefRes
# A tibble: 1 x 8
  hsold constant   hpi  ue.l1  ue.l2 mort30y houst.l1 houst.l2
  <dbl>    <dbl> <dbl>  <dbl>  <dbl>   <dbl>    <dbl>    <dbl>
1     1  -0.0374  1.40 -0.135 -0.135  0.0950  -0.0448  -0.0448

$hsold$varname
[1] "hsold"


$hpermits
$hpermits$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
     constant            hpi        lma2.ue        mort30y  
      0.02716       -0.45118        0.25535       -0.01235  
lma2.hpermits  
      0.23982  


$hpermits$fittedPlot

$hpermits$gofCoefStats
# A tibble: 5 x 5
  term          estimate std.error statistic p.value
  <chr>            <dbl>     <dbl>     <dbl>   <dbl>
1 constant        0.0272    0.0145     1.87   0.0694
2 hpi            -0.451     0.924     -0.488  0.628 
3 lma2.ue         0.255     0.0952     2.68   0.0108
4 mort30y        -0.0124    0.0415    -0.298  0.768 
5 lma2.hpermits   0.240     0.315      0.762  0.451 

$hpermits$gofStats
# A tibble: 1 x 6
  varname     r2 adjr2   aic   bic      p
  <chr>    <dbl> <dbl> <dbl> <dbl>  <dbl>
1 hpermits 0.301 0.209 -109. -98.4 0.0149

$hpermits$coefRes
# A tibble: 1 x 8
  hpermits constant   hpi  ue.l1  ue.l2 mort30y hpermits.l1
     <dbl>    <dbl> <dbl>  <dbl>  <dbl>   <dbl>       <dbl>
1        1  -0.0272 0.451 -0.128 -0.128  0.0124      -0.120
# ... with 1 more variable: hpermits.l2 <dbl>

$hpermits$varname
[1] "hpermits"


$vsales
$vsales$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
   constant  lma2.vsales     wma2.pce          oil  
     0.1972      -0.6868     334.2887      11.7788  


$vsales$fittedPlot

$vsales$gofCoefStats
# A tibble: 4 x 5
  term        estimate std.error statistic     p.value
  <chr>          <dbl>     <dbl>     <dbl>       <dbl>
1 constant       0.197     0.713     0.277 0.783      
2 lma2.vsales   -0.687     0.138    -4.98  0.0000132  
3 wma2.pce     334.       55.8       5.99  0.000000528
4 oil           11.8       4.48      2.63  0.0122     

$vsales$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic        p
  <chr>   <dbl> <dbl> <dbl> <dbl>    <dbl>
1 vsales  0.713 0.684  251.  260. 3.97e-10

$vsales$coefRes
# A tibble: 1 x 7
  vsales constant vsales.l1 vsales.l2   pce pce.l1   oil
   <dbl>    <dbl>     <dbl>     <dbl> <dbl>  <dbl> <dbl>
1      1   -0.197     0.343     0.343 -223.  -111. -11.8

$vsales$varname
[1] "vsales"


$advsalesmotor
$advsalesmotor$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
          constant  lma2.advsalesmotor                 pce  
           0.01101             0.32730             0.97394  
            pce.l1  
          -0.72718  


$advsalesmotor$fittedPlot

$advsalesmotor$gofCoefStats
# A tibble: 4 x 5
  term               estimate std.error statistic   p.value
  <chr>                 <dbl>     <dbl>     <dbl>     <dbl>
1 constant             0.0110   0.00467      2.36 0.0233   
2 lma2.advsalesmotor   0.327    0.238        1.37 0.177    
3 pce                  0.974    0.203        4.80 0.0000234
4 pce.l1              -0.727    0.281       -2.59 0.0135   

$advsalesmotor$gofStats
# A tibble: 1 x 6
  varname          r2 adjr2   aic   bic             p
  <chr>         <dbl> <dbl> <dbl> <dbl>         <dbl>
1 advsalesmotor 0.665 0.630 -190. -181. 0.00000000770

$advsalesmotor$coefRes
# A tibble: 1 x 6
  advsalesmotor constant advsalesmotor.l1 advsalesmotor.l2    pce
          <dbl>    <dbl>            <dbl>            <dbl>  <dbl>
1             1  -0.0110           -0.164           -0.164 -0.974
# ... with 1 more variable: pce.l1 <dbl>

$advsalesmotor$varname
[1] "advsalesmotor"


$advsalesfurnish
$advsalesfurnish$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
            constant  lma2.advsalesfurnish                   pce  
          -0.0007836             0.0111060             3.2121796  
              pce.l1  
          -0.8769312  


$advsalesfurnish$fittedPlot

$advsalesfurnish$gofCoefStats
# A tibble: 4 x 5
  term                  estimate std.error statistic  p.value
  <chr>                    <dbl>     <dbl>     <dbl>    <dbl>
1 constant             -0.000784   0.00282    -0.277 7.83e- 1
2 lma2.advsalesfurnish  0.0111     0.0821      0.135 8.93e- 1
3 pce                   3.21       0.125      25.6   5.41e-26
4 pce.l1               -0.877      0.166      -5.29  4.95e- 6

$advsalesfurnish$gofStats
# A tibble: 1 x 6
  varname            r2 adjr2   aic   bic        p
  <chr>           <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsalesfurnish 0.958 0.953 -223. -214. 3.16e-26

$advsalesfurnish$coefRes
# A tibble: 1 x 6
  advsalesfurnish constant advsalesfurnish.l1 advsalesfurnish.l2   pce
            <dbl>    <dbl>              <dbl>              <dbl> <dbl>
1               1 0.000784           -0.00555           -0.00555 -3.21
# ... with 1 more variable: pce.l1 <dbl>

$advsalesfurnish$varname
[1] "advsalesfurnish"


$advsaleselectronics
$advsaleselectronics$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
                constant  lma2.advsaleselectronics  
                -0.01898                   0.05423  
                     pce                    pce.l1  
                 4.11537                  -0.69172  


$advsaleselectronics$fittedPlot

$advsaleselectronics$gofCoefStats
# A tibble: 4 x 5
  term                     estimate std.error statistic  p.value
  <chr>                       <dbl>     <dbl>     <dbl>    <dbl>
1 constant                  -0.0190   0.00323    -5.88  7.54e- 7
2 lma2.advsaleselectronics   0.0542   0.0750      0.723 4.74e- 1
3 pce                        4.12     0.141      29.3   3.75e-28
4 pce.l1                    -0.692    0.178      -3.88  3.88e- 4

$advsaleselectronics$gofStats
# A tibble: 1 x 6
  varname                r2 adjr2   aic   bic        p
  <chr>               <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsaleselectronics 0.963 0.959 -213. -204. 2.17e-27

$advsaleselectronics$coefRes
# A tibble: 1 x 6
  advsaleselectron~ constant advsaleselectron~ advsaleselectron~   pce
              <dbl>    <dbl>             <dbl>             <dbl> <dbl>
1                 1   0.0190           -0.0271           -0.0271 -4.12
# ... with 1 more variable: pce.l1 <dbl>

$advsaleselectronics$varname
[1] "advsaleselectronics"


$advsalesbuilding
$advsalesbuilding$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
             constant  lma2.advsalesbuilding                    pce  
               0.0161                 0.0821                -0.1734  
               pce.l1  
              -0.3013  


$advsalesbuilding$fittedPlot

$advsalesbuilding$gofCoefStats
# A tibble: 4 x 5
  term                  estimate std.error statistic p.value
  <chr>                    <dbl>     <dbl>     <dbl>   <dbl>
1 constant                0.0161   0.00500     3.22  0.00257
2 lma2.advsalesbuilding   0.0821   0.233       0.352 0.727  
3 pce                    -0.173    0.182      -0.952 0.347  
4 pce.l1                 -0.301    0.182      -1.66  0.106  

$advsalesbuilding$gofStats
# A tibble: 1 x 6
  varname             r2 adjr2   aic   bic       p
  <chr>            <dbl> <dbl> <dbl> <dbl>   <dbl>
1 advsalesbuilding 0.325 0.256 -192. -183. 0.00341

$advsalesbuilding$coefRes
# A tibble: 1 x 6
  advsalesbuilding constant advsalesbuilding.~ advsalesbuilding~   pce
             <dbl>    <dbl>              <dbl>             <dbl> <dbl>
1                1  -0.0161            -0.0411           -0.0411 0.173
# ... with 1 more variable: pce.l1 <dbl>

$advsalesbuilding$varname
[1] "advsalesbuilding"


$advsalesfood
$advsalesfood$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
         constant  lma2.advsalesfood                pce  
          0.01549           -0.34556           -0.26400  
           pce.l1  
         -0.15275  


$advsalesfood$fittedPlot

$advsalesfood$gofCoefStats
# A tibble: 4 x 5
  term              estimate std.error statistic  p.value
  <chr>                <dbl>     <dbl>     <dbl>    <dbl>
1 constant            0.0155   0.00395      3.93 0.000342
2 lma2.advsalesfood  -0.346    0.281       -1.23 0.226   
3 pce                -0.264    0.102       -2.59 0.0134  
4 pce.l1             -0.153    0.137       -1.12 0.271   

$advsalesfood$gofStats
# A tibble: 1 x 6
  varname         r2 adjr2   aic   bic         p
  <chr>        <dbl> <dbl> <dbl> <dbl>     <dbl>
1 advsalesfood 0.452 0.396 -245. -236. 0.0000779

$advsalesfood$coefRes
# A tibble: 1 x 6
  advsalesfood constant advsalesfood.l1 advsalesfood.l2   pce pce.l1
         <dbl>    <dbl>           <dbl>           <dbl> <dbl>  <dbl>
1            1  -0.0155           0.173           0.173 0.264  0.153

$advsalesfood$varname
[1] "advsalesfood"


$advsaleshealth
$advsaleshealth$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
           constant  lma2.advsaleshealth                  pce  
           0.004767            -0.062832             0.943644  
             pce.l1  
          -0.130192  


$advsaleshealth$fittedPlot

$advsaleshealth$gofCoefStats
# A tibble: 4 x 5
  term                estimate std.error statistic  p.value
  <chr>                  <dbl>     <dbl>     <dbl>    <dbl>
1 constant             0.00477   0.00242     1.97  5.59e- 2
2 lma2.advsaleshealth -0.0628    0.178      -0.354 7.25e- 1
3 pce                  0.944     0.0912     10.3   9.66e-13
4 pce.l1              -0.130     0.0971     -1.34  1.88e- 1

$advsaleshealth$gofStats
# A tibble: 1 x 6
  varname           r2 adjr2   aic   bic        p
  <chr>          <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsaleshealth 0.799 0.779 -251. -242. 4.09e-13

$advsaleshealth$coefRes
# A tibble: 1 x 6
  advsaleshealth constant advsaleshealth.l1 advsaleshealth.l2    pce
           <dbl>    <dbl>             <dbl>             <dbl>  <dbl>
1              1 -0.00477            0.0314            0.0314 -0.944
# ... with 1 more variable: pce.l1 <dbl>

$advsaleshealth$varname
[1] "advsaleshealth"


$advsalesgas
$advsalesgas$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
        constant  lma2.advsalesgas               pce  
       -0.009873          0.223452          2.769065  
          pce.l1  
       -0.014038  


$advsalesgas$fittedPlot

$advsalesgas$gofCoefStats
# A tibble: 4 x 5
  term             estimate std.error statistic  p.value
  <chr>               <dbl>     <dbl>     <dbl>    <dbl>
1 constant         -0.00987   0.00743   -1.33   1.92e- 1
2 lma2.advsalesgas  0.223     0.156      1.43   1.60e- 1
3 pce               2.77      0.333      8.32   3.58e-10
4 pce.l1           -0.0140    0.367     -0.0383 9.70e- 1

$advsalesgas$gofStats
# A tibble: 1 x 6
  varname        r2 adjr2   aic   bic            p
  <chr>       <dbl> <dbl> <dbl> <dbl>        <dbl>
1 advsalesgas 0.653 0.618 -139. -130. 0.0000000147

$advsalesgas$coefRes
# A tibble: 1 x 6
  advsalesgas constant advsalesgas.l1 advsalesgas.l2   pce pce.l1
        <dbl>    <dbl>          <dbl>          <dbl> <dbl>  <dbl>
1           1  0.00987         -0.112         -0.112 -2.77 0.0140

$advsalesgas$varname
[1] "advsalesgas"


$advsalesclothing
$advsalesclothing$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
             constant  lma2.advsalesclothing                    pce  
             -0.02696               -0.21237                6.84478  
               pce.l1  
             -0.28723  


$advsalesclothing$fittedPlot

$advsalesclothing$gofCoefStats
# A tibble: 4 x 5
  term                  estimate std.error statistic  p.value
  <chr>                    <dbl>     <dbl>     <dbl>    <dbl>
1 constant               -0.0270   0.00338     -7.97 1.02e- 9
2 lma2.advsalesclothing  -0.212    0.0453      -4.69 3.28e- 5
3 pce                     6.84     0.150       45.5  2.02e-35
4 pce.l1                 -0.287    0.193       -1.49 1.45e- 1

$advsalesclothing$gofStats
# A tibble: 1 x 6
  varname             r2 adjr2   aic   bic        p
  <chr>            <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsalesclothing 0.984 0.983 -207. -198. 1.08e-34

$advsalesclothing$coefRes
# A tibble: 1 x 6
  advsalesclothing constant advsalesclothing.~ advsalesclothing~   pce
             <dbl>    <dbl>              <dbl>             <dbl> <dbl>
1                1   0.0270              0.106             0.106 -6.84
# ... with 1 more variable: pce.l1 <dbl>

$advsalesclothing$varname
[1] "advsalesclothing"


$advsaleshobby
$advsaleshobby$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
          constant  lma2.advsaleshobby                 pce  
          0.008757            0.715649            0.682732  
            pce.l1  
         -1.508719  


$advsaleshobby$fittedPlot

$advsaleshobby$gofCoefStats
# A tibble: 4 x 5
  term               estimate std.error statistic    p.value
  <chr>                 <dbl>     <dbl>     <dbl>      <dbl>
1 constant            0.00876   0.00449      1.95 0.0582    
2 lma2.advsaleshobby  0.716     0.196        3.65 0.000763  
3 pce                 0.683     0.222        3.07 0.00384   
4 pce.l1             -1.51      0.268       -5.63 0.00000167

$advsaleshobby$gofStats
# A tibble: 1 x 6
  varname          r2 adjr2   aic   bic             p
  <chr>         <dbl> <dbl> <dbl> <dbl>         <dbl>
1 advsaleshobby 0.672 0.638 -182. -173. 0.00000000526

$advsaleshobby$coefRes
# A tibble: 1 x 6
  advsaleshobby constant advsaleshobby.l1 advsaleshobby.l2    pce
          <dbl>    <dbl>            <dbl>            <dbl>  <dbl>
1             1 -0.00876           -0.358           -0.358 -0.683
# ... with 1 more variable: pce.l1 <dbl>

$advsaleshobby$varname
[1] "advsaleshobby"


$advsalesmerch
$advsalesmerch$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
          constant  lma2.advsalesmerch                 pce  
          0.002698            0.403845            0.429776  
            pce.l1  
         -0.030469  


$advsalesmerch$fittedPlot

$advsalesmerch$gofCoefStats
# A tibble: 4 x 5
  term               estimate std.error statistic  p.value
  <chr>                 <dbl>     <dbl>     <dbl>    <dbl>
1 constant            0.00270   0.00292     0.923 0.362   
2 lma2.advsalesmerch  0.404     0.313       1.29  0.204   
3 pce                 0.430     0.101       4.25  0.000129
4 pce.l1             -0.0305    0.101      -0.301 0.765   

$advsalesmerch$gofStats
# A tibble: 1 x 6
  varname          r2 adjr2   aic   bic         p
  <chr>         <dbl> <dbl> <dbl> <dbl>     <dbl>
1 advsalesmerch 0.458 0.402 -242. -233. 0.0000655

$advsalesmerch$coefRes
# A tibble: 1 x 6
  advsalesmerch constant advsalesmerch.l1 advsalesmerch.l2    pce
          <dbl>    <dbl>            <dbl>            <dbl>  <dbl>
1             1 -0.00270           -0.202           -0.202 -0.430
# ... with 1 more variable: pce.l1 <dbl>

$advsalesmerch$varname
[1] "advsalesmerch"


$advsalesmisc
$advsalesmisc$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
         constant  lma2.advsalesmisc                pce  
        0.0003274         -0.1251819          2.1995591  
           pce.l1  
       -0.2258697  


$advsalesmisc$fittedPlot

$advsalesmisc$gofCoefStats
# A tibble: 4 x 5
  term               estimate std.error statistic  p.value
  <chr>                 <dbl>     <dbl>     <dbl>    <dbl>
1 constant           0.000327   0.00288     0.114 9.10e- 1
2 lma2.advsalesmisc -0.125      0.108      -1.16  2.52e- 1
3 pce                2.20       0.127      17.4   5.84e-20
4 pce.l1            -0.226      0.156      -1.44  1.57e- 1

$advsalesmisc$gofStats
# A tibble: 1 x 6
  varname         r2 adjr2   aic   bic        p
  <chr>        <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsalesmisc 0.906 0.897 -222. -213. 1.64e-19

$advsalesmisc$coefRes
# A tibble: 1 x 6
  advsalesmisc  constant advsalesmisc.l1 advsalesmisc.l2   pce pce.l1
         <dbl>     <dbl>           <dbl>           <dbl> <dbl>  <dbl>
1            1 -0.000327          0.0626          0.0626 -2.20  0.226

$advsalesmisc$varname
[1] "advsalesmisc"


$advsalesnonstore
$advsalesnonstore$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
             constant  lma2.advsalesnonstore                    pce  
              0.03236                0.08343               -0.92343  
               pce.l1  
             -0.61830  


$advsalesnonstore$fittedPlot

$advsalesnonstore$gofCoefStats
# A tibble: 4 x 5
  term                  estimate std.error statistic     p.value
  <chr>                    <dbl>     <dbl>     <dbl>       <dbl>
1 constant                0.0324   0.00519     6.23  0.000000249
2 lma2.advsalesnonstore   0.0834   0.179       0.467 0.643      
3 pce                    -0.923    0.158      -5.86  0.000000813
4 pce.l1                 -0.618    0.143      -4.32  0.000103   

$advsalesnonstore$gofStats
# A tibble: 1 x 6
  varname             r2 adjr2   aic   bic        p
  <chr>            <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsalesnonstore 0.767 0.743 -213. -204. 7.25e-12

$advsalesnonstore$coefRes
# A tibble: 1 x 6
  advsalesnonstore constant advsalesnonstore.~ advsalesnonstore~   pce
             <dbl>    <dbl>              <dbl>             <dbl> <dbl>
1                1  -0.0324            -0.0417           -0.0417 0.923
# ... with 1 more variable: pce.l1 <dbl>

$advsalesnonstore$varname
[1] "advsalesnonstore"


$advsalesfoodservices
$advsalesfoodservices$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
                 constant  lma2.advsalesfoodservices  
                -0.008417                   0.100401  
                      pce                     pce.l1  
                 3.840572                  -0.134368  


$advsalesfoodservices$fittedPlot

$advsalesfoodservices$gofCoefStats
# A tibble: 4 x 5
  term                      estimate std.error statistic  p.value
  <chr>                        <dbl>     <dbl>     <dbl>    <dbl>
1 constant                  -0.00842   0.00252    -3.34  1.84e- 3
2 lma2.advsalesfoodservices  0.100     0.0628      1.60  1.18e- 1
3 pce                        3.84      0.113      34.0   1.40e-30
4 pce.l1                    -0.134     0.138      -0.971 3.38e- 1

$advsalesfoodservices$gofStats
# A tibble: 1 x 6
  varname                 r2 adjr2   aic   bic        p
  <chr>                <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsalesfoodservices 0.971 0.968 -232. -223. 2.74e-29

$advsalesfoodservices$coefRes
# A tibble: 1 x 6
  advsalesfoodserv~ constant advsalesfoodserv~ advsalesfoodserv~   pce
              <dbl>    <dbl>             <dbl>             <dbl> <dbl>
1                 1  0.00842           -0.0502           -0.0502 -3.84
# ... with 1 more variable: pce.l1 <dbl>

$advsalesfoodservices$varname
[1] "advsalesfoodservices"


$advsales
$advsales$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
     constant  lma2.advsales            pce         pce.l1  
     0.003914       0.541934       1.035717      -0.512848  


$advsales$fittedPlot

$advsales$gofCoefStats
# A tibble: 4 x 5
  term          estimate std.error statistic  p.value
  <chr>            <dbl>     <dbl>     <dbl>    <dbl>
1 constant       0.00391   0.00201      1.95 5.88e- 2
2 lma2.advsales  0.542     0.141        3.84 4.35e- 4
3 pce            1.04      0.0756      13.7  1.69e-16
4 pce.l1        -0.513     0.103       -4.97 1.38e- 5

$advsales$gofStats
# A tibble: 1 x 6
  varname     r2 adjr2   aic   bic        p
  <chr>    <dbl> <dbl> <dbl> <dbl>    <dbl>
1 advsales 0.900 0.890 -267. -258. 5.57e-19

$advsales$coefRes
# A tibble: 1 x 6
  advsales constant advsales.l1 advsales.l2   pce pce.l1
     <dbl>    <dbl>       <dbl>       <dbl> <dbl>  <dbl>
1        1 -0.00391      -0.271      -0.271 -1.04  0.513

$advsales$varname
[1] "advsales"


$emp
$emp$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
  constant          ue         gdp  
 9.627e-05  -7.738e-02   3.010e-01  


$emp$fittedPlot

$emp$gofCoefStats
# A tibble: 3 x 5
  term       estimate std.error statistic  p.value
  <chr>         <dbl>     <dbl>     <dbl>    <dbl>
1 constant  0.0000963  0.000554     0.174 8.63e- 1
2 ue       -0.0774     0.00621    -12.5   1.09e-15
3 gdp       0.301      0.0672       4.48  5.64e- 5

$emp$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic        p
  <chr>   <dbl> <dbl> <dbl> <dbl>    <dbl>
1 emp     0.978 0.977 -384. -376. 7.16e-35

$emp$coefRes
# A tibble: 1 x 4
    emp   constant     ue    gdp
  <dbl>      <dbl>  <dbl>  <dbl>
1     1 -0.0000963 0.0774 -0.301

$emp$varname
[1] "emp"


$jolts
$jolts$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
constant        ue       gdp  
 0.01146   0.08680   3.50196  


$jolts$fittedPlot

$jolts$gofCoefStats
# A tibble: 3 x 5
  term     estimate std.error statistic  p.value
  <chr>       <dbl>     <dbl>     <dbl>    <dbl>
1 constant   0.0115   0.00696      1.65 0.107   
2 ue         0.0868   0.0781       1.11 0.273   
3 gdp        3.50     0.845        4.15 0.000161

$jolts$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic        p
  <chr>   <dbl> <dbl> <dbl> <dbl>    <dbl>
1 jolts   0.676 0.653 -156. -148. 2.35e-10

$jolts$coefRes
# A tibble: 1 x 4
  jolts constant      ue   gdp
  <dbl>    <dbl>   <dbl> <dbl>
1     1  -0.0115 -0.0868 -3.50

$jolts$varname
[1] "jolts"


$oil
$oil$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
constant  lma2.oil       spy       hpi  
-0.08286   0.09728   2.83595  -0.57979  


$oil$fittedPlot

$oil$gofCoefStats
# A tibble: 4 x 5
  term     estimate std.error statistic    p.value
  <chr>       <dbl>     <dbl>     <dbl>      <dbl>
1 constant  -0.0829    0.0305    -2.71  0.00984   
2 lma2.oil   0.0973    0.177      0.551 0.585     
3 spy        2.84      0.493      5.75  0.00000115
4 hpi       -0.580     1.65      -0.352 0.727     

$oil$gofStats
# A tibble: 1 x 6
  varname    r2 adjr2   aic   bic         p
  <chr>   <dbl> <dbl> <dbl> <dbl>     <dbl>
1 oil     0.472 0.418 -47.3 -38.5 0.0000400

$oil$coefRes
# A tibble: 1 x 6
    oil constant  oil.l1  oil.l2   spy   hpi
  <dbl>    <dbl>   <dbl>   <dbl> <dbl> <dbl>
1     1   0.0829 -0.0486 -0.0486 -2.84 0.580

$oil$varname
[1] "oil"


$delinqrer
$delinqrer$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
      constant          ma2.ue         ma2.pid  lma2.delinqrer  
      -0.01290         0.17330        -0.01806         0.56843  


$delinqrer$fittedPlot

$delinqrer$gofCoefStats
# A tibble: 4 x 5
  term           estimate std.error statistic    p.value
  <chr>             <dbl>     <dbl>     <dbl>      <dbl>
1 constant        -0.0129   0.00609   -2.12   0.0407    
2 ma2.ue           0.173    0.0364     4.77   0.0000261 
3 ma2.pid         -0.0181   0.389     -0.0464 0.963     
4 lma2.delinqrer   0.568    0.111      5.11   0.00000894

$delinqrer$gofStats
# A tibble: 1 x 6
  varname      r2 adjr2   aic   bic        p
  <chr>     <dbl> <dbl> <dbl> <dbl>    <dbl>
1 delinqrer 0.786 0.765 -190. -182. 1.37e-12

$delinqrer$coefRes
# A tibble: 1 x 8
  delinqrer constant      ue   ue.l1     pid  pid.l1 delinqrer.l1
      <dbl>    <dbl>   <dbl>   <dbl>   <dbl>   <dbl>        <dbl>
1         1   0.0129 -0.0867 -0.0867 0.00903 0.00903       -0.284
# ... with 1 more variable: delinqrer.l2 <dbl>

$delinqrer$varname
[1] "delinqrer"


$delinqcc
$delinqcc$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
     constant         ma2.ue        ma2.pid  lma2.delinqcc  
     0.007617      -0.090364      -1.912987       0.805433  


$delinqcc$fittedPlot

$delinqcc$gofCoefStats
# A tibble: 4 x 5
  term          estimate std.error statistic     p.value
  <chr>            <dbl>     <dbl>     <dbl>       <dbl>
1 constant       0.00762   0.00732      1.04 0.304      
2 ma2.ue        -0.0904    0.0490      -1.85 0.0726     
3 ma2.pid       -1.91      0.519       -3.69 0.000687   
4 lma2.delinqcc  0.805     0.130        6.22 0.000000260

$delinqcc$gofStats
# A tibble: 1 x 6
  varname     r2 adjr2   aic   bic             p
  <chr>    <dbl> <dbl> <dbl> <dbl>         <dbl>
1 delinqcc 0.694 0.662 -166. -157. 0.00000000137

$delinqcc$coefRes
# A tibble: 1 x 8
  delinqcc constant     ue  ue.l1   pid pid.l1 delinqcc.l1 delinqcc.l2
     <dbl>    <dbl>  <dbl>  <dbl> <dbl>  <dbl>       <dbl>       <dbl>
1        1 -0.00762 0.0452 0.0452 0.956  0.956      -0.403      -0.403

$delinqcc$varname
[1] "delinqcc"


$delinqci
$delinqci$lmObj

Call:
lm(formula = yMat ~ . - 1, data = as_tibble(xMat))

Coefficients:
     constant         ma2.ue        ma2.pid  lma2.delinqci  
    -0.006006       0.145008      -0.249934       0.659257  


$delinqci$fittedPlot


